buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.18"
    }
}

apply plugin: "idea"
apply plugin: "java"
apply plugin: "com.google.protobuf"
apply plugin: "maven-publish"

ext {
    semVersion = "0.0.1"
    fullVersion = semVersion + "+" + ('git rev-list --count HEAD'.execute().text.trim())
    nettyVersion = "4.1.74.Final"
    lombokVersion = "1.18.22"
    protobufVersion = "3.19.4"
    log4jVersion = "2.17.2"
    grpcVersion = "1.44.1"
    javaxVersion = "1.3.2"
}

group 'com.husbylabs'
version "$fullVersion"

repositories {
    mavenCentral()
}

dependencies {

    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
    implementation "io.netty:netty-buffer:$nettyVersion"
    implementation "com.google.protobuf:protobuf-java:$protobufVersion"
    runtimeOnly "io.grpc:grpc-netty-shaded:$grpcVersion"
    implementation "io.grpc:grpc-protobuf:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "javax.annotation:javax.annotation-api:$javaxVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

publishing {
    repositories {
        if (System.getenv("MAVEN_USERNAME") != null && System.getenv("MAVEN_PASSWORD")) {
            maven {
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
                name = "HusbyLib"
                url = "https://maven.husbylabs.com/releases"
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = "com.husbylabs"
            artifactId = "warptables"
            version = project.version

            from components.java
        }
    }
}


test {
    useJUnitPlatform()
}

protobuf {
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}